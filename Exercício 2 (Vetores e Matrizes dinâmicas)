# inclui  < iostream >
# inclui  < stdlib.h >
# inclui  < stdio.h >
usando  namespace  std ;

# define  LIN  3
# define  COL  3

// verificando igualdade entre matrizes	
string verificarMatrizes ( int * mat1 [], int * mat2 [])
{
	para ( int l = 0 ; l <LIN; l ++)
	{
		para ( int c = 0 ; c <COL; c ++)
		{
			if (mat1 [l] [c]! = mat2 [l] [c])
			{
				retornar  " NÃO SÃO IGUAIS! " ;
				pausa ;
			}
		}
	}
	
	retorno  " SÃO IGUAIS! " ;
}

int  main ( int argc, char ** argv)
{
	setlocale (LC_ALL, " " );
	
	/ * -- Matriz 1 -- * /
	int l;
	int c;
	
	int ** mat1;
	mat1 = ( int **) malloc ( sizeof ( int ) * LIN); // alocando memória no vetor de ponteiros
	
	para ( int i = 0 ; i < 5 ; i ++)
	{
		mat1 [i] = ( int *) malloc ( sizeof ( int ) * COL); // alocando memória para cada elemento
	}
	
	cout << " PRIMEIRA MATRIZ " << endl;
	// populando matriz 1
	para (l = 0 ; l <LIN; l ++)
	{
		para (c = 0 ; c <COL; c ++)
		{
			cout << " Informe o valor ( " << l << " , " << c << " ): " ;
			cin >> mat1 [l] [c];
		}
	}
	
	// exibindo matriz 1
	para (l = 0 ; l <LIN; l ++)
	{
		para (c = 0 ; c <COL; c ++)
		{
			cout << (c == 0 ? " | " : " " ) << mat1 [l] [c] << " | " ;
		}
		cout << endl;
	}
	
	/*-- matriz 2 --*/
	int x;
	int y;
	
	int ** mat2;
	mat2 = ( int **) malloc ( sizeof ( int ) * LIN);
	
	para ( int i = 0 ; i <LIN; i ++)
	{
		mat2 [i] = ( int *) malloc ( sizeof ( int ) * COL);
	}
	
	cout << endl << " SEGUNDA MATRIZ " << endl;
	// populando matriz 2
	para (x = 0 ; x <LIN; x ++)
	{
		para (y = 0 ; y <COL; y ++)
		{
			cout << " Informe o valor ( " << x << " , " << y << " ): " ;
			cin >> mat2 [x] [y];
		}
	}
	
	// exibindo matriz 2
	para (x = 0 ; x <LIN; x ++)
	{
		para (y = 0 ; y <COL; y ++)
		{
			cout << (y == 0 ? " | " : " " ) << mat2 [x] [y] << " | " ;
		}
		cout << endl;
	}
	
	
	// verificando igualdade entre matrizes	
	string result = verificarMatrizes (mat1, mat2);
	cout << endl << " As matrizes são iguais? " << resultado;
	
	return  0 ;
}
